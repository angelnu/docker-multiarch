sudo: required

services:
 - docker

language: bash

env:
  matrix:

  # Dashboard
  # - TARGET="angelnu/kubernetes-dashboard:v1.10.1"
  #   SOURCE_amd64="k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1"
  #   SOURCE_arm64="k8s.gcr.io/kubernetes-dashboard-arm64:v1.10.1"
  #   SOURCE_arm="k8s.gcr.io/kubernetes-dashboard-arm:v1.10.1"

  # Monitoring
  # - TARGET="angelnu/heapster-grafana:v5.0.4"
  #   SOURCE_amd64="gcr.io/google_containers/heapster-grafana-amd64:v5.0.4"
  #   SOURCE_arm64="gcr.io/google_containers/heapster-grafana-arm64:v5.0.4"
  #   SOURCE_arm="gcr.io/google_containers/heapster-grafana-arm:v5.0.4"
  #
  # - TARGET="angelnu/heapster:v1.5.4"
  #   SOURCE_amd64="gcr.io/google_containers/heapster-amd64:v1.5.4"
  #   SOURCE_arm64="gcr.io/google_containers/heapster-arm64:v1.5.4"
  #   SOURCE_arm="gcr.io/google_containers/heapster-arm:v1.5.4"

  #- TARGET="angelnu/heapster-influxdb:v1.5.2"
  #  SOURCE_amd64="gcr.io/google_containers/heapster-influxdb-amd64:v1.5.2"
  #  SOURCE_arm64="gcr.io/google_containers/heapster-influxdb-arm64:v1.5.2"
  #  SOURCE_arm="gcr.io/google_containers/heapster-influxdb-arm:v1.5.2"




  - TARGET="angelnu/nfs-client-provisioner:latest"
    ARCHS="arm amd64"
    SOURCE_amd64="quay.io/external_storage/nfs-client-provisioner:latest"
    SOURCE_arm="quay.io/external_storage/nfs-client-provisioner-arm:latest"

  - TARGET="angelnu/openvpn-client:latest"
    SOURCE_amd64="dperson/openvpn-client:latest"
    SOURCE_arm64="dperson/openvpn-client:aarch64"
    SOURCE_arm="dperson/openvpn-client:armhf"

  # - TARGET="angelnu/nextcloudplus:latest"
  #   ARCHS="arm amd64"
  #   SOURCE_amd64="ownyourbits/nextcloudpi-x86:latest"
  #   SOURCE_arm="ownyourbits/nextcloudpi-armhf:latest"


  # TBD: linuxserver provides multiarch now
  - TARGET="angelnu/jackett:latest"
    SOURCE_amd64="linuxserver/jackett:latest"
    SOURCE_arm64="lsioarmhf/jackett-aarch64:latest"
    SOURCE_arm="lsioarmhf/jackett:latest"

  - TARGET="angelnu/transmission:latest"
    SOURCE_amd64="linuxserver/transmission:latest"
    SOURCE_arm64="lsioarmhf/transmission-aarch64:latest"
    SOURCE_arm="lsioarmhf/transmission:latest"

  - TARGET="angelnu/sickrage:latest"
    SOURCE_amd64="linuxserver/sickrage:latest"
    SOURCE_arm64="lsioarmhf/sickrage-aarch64:latest"
    SOURCE_arm="lsioarmhf/sickrage:latest"

  - TARGET="angelnu/heimdall:latest"
    SOURCE_amd64="linuxserver/heimdall:latest"
    SOURCE_arm64="lsioarmhf/heimdall-aarch64:latest"
    SOURCE_arm="lsioarmhf/heimdall:latest"

  - TARGET="angelnu/couchpotato:latest"
    SOURCE_amd64="linuxserver/couchpotato:latest"
    SOURCE_arm64="lsioarmhf/couchpotato-aarch64:latest"
    SOURCE_arm="lsioarmhf/couchpotato:latest"


script:
- mkdir -p $HOME/.docker
- >
  echo '{"experimental": "enabled"}'>$HOME/.docker/config.json
- docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
- ./build/build_manifest.sh
